#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import requests
import json

def test_api_with_real_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ URL –∏–∑ ClickHouse"""
    base_url = "http://localhost:8001"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # URL –∏–∑ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    test_urls = [
        "https://example.com",
        "https://api.example.com", 
        "http://blog.example.com",
        "https://shop.example.com"
    ]
    
    for url in test_urls:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL: {url}")
        print("-" * 50)
        
        try:
            # –¢–µ—Å—Ç –∞–Ω–∞–ª–∏–∑–∞
            response = requests.post(f"{base_url}/analyze", json={
                "url": url,
                "check_count": 10
            })
            
            print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –ê–Ω–∞–ª–∏–∑ —É—Å–ø–µ—à–µ–Ω!")
                print(f"   –¢–∏–ø –∞–Ω–∞–ª–∏–∑–∞: {result['analysis_type']}")
                
                if result['analysis_type'] == 'errors':
                    data = result['data']
                    errors = data.get('errors', [])
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫: {len(errors)}")
                    if errors:
                        print(f"   –ü–µ—Ä–≤–∞—è –æ—à–∏–±–∫–∞: {errors[0]}")
                    
                    print(f"   –ê–Ω–∞–ª–∏–∑: {data.get('error_analysis', 'N/A')[:100]}...")
                    print(f"   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {data.get('recommendations', 'N/A')[:100]}...")
                
                else:
                    data = result['data']
                    print(f"   –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {data.get('general_characteristics', 'N/A')[:100]}...")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
                print(f"   –î–µ—Ç–∞–ª–∏: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç health check
    print(f"\nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")
    try:
        response = requests.get(f"{base_url}/health")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        if response.status_code == 200:
            health = response.json()
            print(f"   ClickHouse: {health.get('clickhouse', 'unknown')}")
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")

def main():
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ ClickHouse")
    print("=" * 60)
    
    test_api_with_real_data()
    
    print(f"\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"–ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")

if __name__ == "__main__":
    main()
