#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã checks –≤ ClickHouse
"""

import clickhouse_connect
from config import settings

def check_table_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã checks"""
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã checks...")
        
        client = clickhouse_connect.get_client(
            host=settings.CLICKHOUSE_HOST,
            port=settings.CLICKHOUSE_PORT,
            database=settings.CLICKHOUSE_DATABASE,
            username=settings.CLICKHOUSE_USER,
            password=settings.CLICKHOUSE_PASSWORD
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        tables_query = "SHOW TABLES"
        tables_result = client.query(tables_query)
        tables = [row[0] for row in tables_result.result_rows]
        
        print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {tables}")
        
        if 'checks' not in tables:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'checks' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        structure_query = "DESCRIBE checks"
        structure_result = client.query(structure_query)
        
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã 'checks':")
        print("-" * 50)
        for row in structure_result.result_rows:
            print(f"  {row[0]:<20} | {row[1]:<15} | {row[2] if len(row) > 2 else ''}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        count_query = "SELECT COUNT(*) as total FROM checks"
        count_result = client.query(count_query)
        total_records = count_result.result_rows[0][0]
        print(f"\nüìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ: {total_records}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏
        if total_records > 0:
            sample_query = "SELECT * FROM checks LIMIT 1"
            sample_result = client.query(sample_query)
            
            print(f"\nüîç –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:")
            print("-" * 50)
            columns = [col[0] for col in sample_result.column_names]
            sample_row = sample_result.result_rows[0]
            
            for i, col in enumerate(columns):
                value = sample_row[i] if i < len(sample_row) else "N/A"
                print(f"  {col:<20} | {str(value)[:50]}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã ClickHouse")
    print("=" * 50)
    
    if check_table_structure():
        print(f"\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã")

if __name__ == "__main__":
    main()
