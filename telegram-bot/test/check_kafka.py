from confluent_kafka import Consumer, KafkaError
from config import config
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


def check_kafka_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kafka"""
    print("üîç Testing Kafka connection...")
    print(f"   Brokers: {config.KAFKA_BROKERS}")
    print(f"   Username: {config.KAFKA_USERNAME}")
    print(f"   Topic: {config.KAFKA_ALERTS_TOPIC}")

    try:
        consumer = Consumer(config.kafka_config)

        # –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å metadata –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        metadata = consumer.list_topics(timeout=10)
        print("‚úÖ Successfully connected to Kafka cluster")

        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞
        if config.KAFKA_ALERTS_TOPIC in metadata.topics:
            print(f"‚úÖ Topic '{config.KAFKA_ALERTS_TOPIC}' exists")
        else:
            print(f"‚ùå Topic '{config.KAFKA_ALERTS_TOPIC}' does not exist")
            print("Available topics:")
            for topic in metadata.topics:
                print(f"  - {topic}")

        consumer.close()

    except Exception as e:
        print(f"‚ùå Connection failed: {e}")
        print("\nüí° Troubleshooting tips:")
        print("1. Check if Kafka broker is running")
        print("2. Verify network connectivity: telnet 193.124.114.117 9092")
        print("3. Check username/password")
        print("4. Verify topic exists")
        print("5. Check firewall settings")


if __name__ == "__main__":
    check_kafka_connection()